// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package homecomponents

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"encoding/base64"
	"encoding/json"
)

type Article struct {
	ID         string `json:"id"`
	Title      string `json:"title"`
	Username   string `json:"username"`
	City       string `json:"city"`
	CoverImage string `json:"coverImage"`
}

func ArticleCarousel() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = carouselContent(dummyArticles()).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func carouselContent(topStories []Article) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div x-data=\"{ \n            currentIndex: 0,\n            stories: []\n        }\" x-init=\"stories = JSON.parse(atob($el.dataset.stories))\" class=\"relative w-full overflow-hidden rounded-lg shadow-lg\" data-stories=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(encodeStories(topStories))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/home-components/main_carousel.templ`, Line: 28, Col: 47}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><div class=\"flex transition-transform duration-300 ease-in-out\" x-ref=\"carousel\"><template x-for=\"(story, index) in stories\" :key=\"index\"><div class=\"flex-shrink-0 w-full h-[330px] bg-cover bg-no-repeat rounded-lg\" :style=\"{ &#39;background-image&#39;: `url(${story.coverImage})` }\"><a :href=\"`/article/${story.id}`\" class=\"flex flex-col justify-end w-full h-[90%] p-5 pt-[60px] rounded-lg bg-gradient-to-t from-black via-black/60 to-transparent\"><h1 class=\"text-2xl leading-8 text-white\" x-text=\"story.title\"></h1><h2 class=\"flex items-center gap-2 text-sm font-light text-white\"><span x-text=\"story.username\"></span> <span class=\"w-1 h-1 bg-white/60 rounded-full\"></span> <span class=\"uppercase text-white/60\" x-text=\"story.city\"></span></h2></a></div></template></div><button @click=\"if (currentIndex &gt; 0) { currentIndex--; $refs.carousel.style.transform = `translateX(-${currentIndex * 100}%)` }\" class=\"absolute left-0 top-1/2 -translate-y-1/2 -translate-x-6 bg-white/80 p-2 rounded-full shadow-md\"><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 19.5 8.25 12l7.5-7.5\"></path></svg></button> <button @click=\"if (currentIndex &lt; stories.length - 1) { currentIndex++; $refs.carousel.style.transform = `translateX(-${currentIndex * 100}%)` }\" class=\"absolute right-0 top-1/2 -translate-y-1/2 translate-x-6 bg-white/80 p-2 rounded-full shadow-md\"><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m8.25 4.5 7.5 7.5-7.5 7.5\"></path></svg></button></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func dummyArticles() []Article {
	return []Article{
		{
			ID:         "1",
			Title:      "The Rise of Sustainable Fashion in New York",
			Username:   "EcoFashionista",
			City:       "New York",
			CoverImage: "https://example.com/images/sustainable-fashion-ny.jpg",
		},
		{
			ID:         "2",
			Title:      "Tokyo's Hidden Culinary Gems",
			Username:   "FoodExplorer",
			City:       "Tokyo",
			CoverImage: "https://example.com/images/tokyo-culinary-gems.jpg",
		},
		{
			ID:         "3",
			Title:      "London's Street Art Revolution",
			Username:   "UrbanArtist",
			City:       "London",
			CoverImage: "https://example.com/images/london-street-art.jpg",
		},
		{
			ID:         "4",
			Title:      "The Tech Boom in Silicon Valley",
			Username:   "TechGuru",
			City:       "San Francisco",
			CoverImage: "https://example.com/images/silicon-valley-tech.jpg",
		},
		{
			ID:         "5",
			Title:      "Paris: A Journey Through Time",
			Username:   "HistoryBuff",
			City:       "Paris",
			CoverImage: "https://example.com/images/paris-history.jpg",
		},
	}
}

func encodeStories(stories []Article) string {
	jsonData, err := json.Marshal(stories)
	if err != nil {
		return ""
	}
	return base64.StdEncoding.EncodeToString(jsonData)
}
